from telebot import TeleBot, types
import datetime
import json
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

async def start(update: Update, context: CallbackContext):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞—á–∞—Ç—å', —á—Ç–æ–±—ã –≤—ã—á–∏—Å–ª–∏—Ç—å –≤–∞—à–∏ PAWS —Ç–æ–∫–µ–Ω—ã.")

async def handle_user_interaction(update: Update, context: CallbackContext):
    # –î–∞–Ω–Ω—ã–µ, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    user_id = update.message.from_user.id
    data = update.message.text

    interaction_data = json.loads(data)
    interaction_timestamp = interaction_data['interactionTimestamp']
    action = interaction_data['action']
    
    if action == 'get_started':
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤—Ä–µ–º—è
        if user_id not in user_data:
            user_data[user_id] = {
                'first_interaction': interaction_timestamp,
                'total_paws': 0
            }

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –≤—Ä–µ–º–µ–Ω–µ–º –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        first_interaction_time = datetime.datetime.fromisoformat(user_data[user_id]['first_interaction'])
        current_time = datetime.datetime.now()
        time_difference = current_time - first_interaction_time

        # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ 365 –¥–Ω–µ–π, –Ω–∞–≥—Ä–∞–∂–¥–∞–µ–º 1000 PAWS
        if time_difference.days >= 365:
            user_data[user_id]['total_paws'] = 1000  # –ù–∞–≥—Ä–∞–¥–∞ ‚Äî 1000 PAWS
            await update.message.reply_text(f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ 1000 PAWS —Ç–æ–∫–µ–Ω–æ–≤! üêæ")
        else:
            remaining_days = 365 - time_difference.days
            await update.message.reply_text(f"–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ 1000 PAWS —á–µ—Ä–µ–∑ {remaining_days} –¥–Ω–µ–π.")

async def main():
    # –í–∞—à API –∫–ª—é—á
    application = Application.builder().token("YOUR_BOT_API_KEY").build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_user_interaction))
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    await application.run_polling()

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())

bot = TeleBot("7711721243:AAFr11zdBENTd75dMjXCvCg0nSoojXAa2-U")

@bot.message_handler(commands=["start"])
def start_handler(message):
    keyboard = types.InlineKeyboardMarkup()
    web_app = types.WebAppInfo("https://abduaziz001.github.io/Paws/")  # –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é —Å—Å—ã–ª–∫—É
    btn = types.InlineKeyboardButton("Open PAWS Mini App", web_app=web_app)
    keyboard.add(btn)
    bot.send_message(message.chat.id, "Welcome to PAWS!", reply_markup=keyboard)
    

# –ò–º–∏—Ç–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_data = {}

def handle_user_interaction(user_id, data):
    # –†–∞–∑–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    interaction_data = json.loads(data)
    interaction_timestamp = interaction_data['interactionTimestamp']
    action = interaction_data['action']
    
    if action == 'get_started':
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤—Ä–µ–º—è
        if user_id not in user_data:
            user_data[user_id] = {
                'first_interaction': interaction_timestamp,
                'total_paws': 0
            }

        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Ç–µ–∫—É—â–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –≤—Ä–µ–º–µ–Ω–µ–º –ø–µ—Ä–≤–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
        first_interaction_time = datetime.datetime.fromisoformat(user_data[user_id]['first_interaction'])
        current_time = datetime.datetime.now()
        time_difference = current_time - first_interaction_time

        # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ 365 –¥–Ω–µ–π, –Ω–∞–≥—Ä–∞–∂–¥–∞–µ–º 1000 PAWS
        if time_difference.days >= 365:
            user_data[user_id]['total_paws'] = 1000  # –ù–∞–≥—Ä–∞–¥–∞ ‚Äî 1000 PAWS
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞—Ä–∞–±–æ—Ç–∞–ª 1000 PAWS —Ç–æ–∫–µ–Ω–æ–≤!")

        return user_data[user_id]['total_paws']


bot.polling()
